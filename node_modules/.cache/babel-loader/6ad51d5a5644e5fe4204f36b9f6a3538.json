{"ast":null,"code":"import _toConsumableArray from \"/home/dagaubs/Cours/TPs/GLITAA/GLITAA_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { combineReducers } from \"redux\";\nimport events from \"./EventsReducer\";\nimport filter from \"./FilterReducer\";\nexport default combineReducers({\n  events: events,\n  filter: filter\n});\n\nvar old_filter = function old_filter() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    belonging: \"All\",\n    date: \"from today\",\n    search_name: '',\n    location: \"All\"\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'CHANGE_FILTER':\n      return action.newFilter;\n\n    default:\n      return state;\n  }\n};\n\nvar old_events = function old_events() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_EVENT':\n      return _toConsumableArray(state).concat([action.newEvent]);\n\n    default:\n      return state;\n  }\n};\n\nvar locations = function locations() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_LOCATION':\n      return _toConsumableArray(state).concat([action.newLocation]);\n\n    default:\n      return state;\n  }\n};\n\nvar transactions = function transactions() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_TRANSACTION':\n      return _toConsumableArray(state).concat([action.transaction]);\n\n    case 'GET_TRANSACTIONS_SUCCESS':\n      //console.log(\"Action GET_TRANSACTION_SUCCESS : \", action.transactions);\n      return action.transactions;\n\n    default:\n      return state;\n  }\n};\n\nvar users = function users() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_USER':\n      return _toConsumableArray(state).concat([action.user]);\n\n    case 'GET_USERS_SUCCESS':\n      return action.users;\n\n    default:\n      return state;\n  }\n};\n\nvar selectUser = function selectUser() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'CHANGE_FILTER':\n      return action.selectUser;\n\n    default:\n      return state;\n  }\n};\n\nvar OLD_rootReducer = function OLD_rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return {\n    events: old_events(state, action),\n    filter: old_filter(state, action),\n    locations: locations(state, action)\n  };\n};\n/*combineReducers({\n    events = event(state, action);\n    //session: sessionReducer\n})*/\n//export default rootReducer//connect({}, mapDispatchToProps)(rootReducer)","map":{"version":3,"sources":["/home/dagaubs/Cours/TPs/GLITAA/GLITAA_front/src/reducers/rootReducer.js"],"names":["combineReducers","events","filter","old_filter","state","belonging","date","search_name","location","action","type","newFilter","old_events","newEvent","locations","newLocation","transactions","transaction","users","user","selectUser","OLD_rootReducer"],"mappings":";AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,eAAeF,eAAe,CAAC;AAC7BC,EAAAA,MAAM,EAANA,MAD6B;AAE7BC,EAAAA,MAAM,EAANA;AAF6B,CAAD,CAA9B;;AAMA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAA0F;AAAA,MAAzFC,KAAyF,uEAAjF;AAACC,IAAAA,SAAS,EAAC,KAAX;AAAkBC,IAAAA,IAAI,EAAC,YAAvB;AAAqCC,IAAAA,WAAW,EAAC,EAAjD;AAAqDC,IAAAA,QAAQ,EAAC;AAA9D,GAAiF;AAAA,MAAXC,MAAW;;AACzG,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,eAAL;AACI,aAAOD,MAAM,CAACE,SAAd;;AACJ;AACI,aAAOP,KAAP;AAJR;AAMH,CAPD;;AASA,IAAMQ,UAAU,GAAG,SAAbA,UAAa,GAAwB;AAAA,MAAvBR,KAAuB,uEAAf,EAAe;AAAA,MAAXK,MAAW;;AACvC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,WAAL;AACI,gCAAWN,KAAX,UAAkBK,MAAM,CAACI,QAAzB;;AACJ;AACI,aAAOT,KAAP;AAJR;AAMH,CAPD;;AAUA,IAAMU,SAAS,GAAG,SAAZA,SAAY,GAAwB;AAAA,MAAvBV,KAAuB,uEAAf,EAAe;AAAA,MAAXK,MAAW;;AACtC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,cAAL;AACI,gCAAWN,KAAX,UAAkBK,MAAM,CAACM,WAAzB;;AACJ;AACI,aAAOX,KAAP;AAJR;AAMH,CAPD;;AAUA,IAAMY,YAAY,GAAG,SAAfA,YAAe,GAAwB;AAAA,MAAvBZ,KAAuB,uEAAf,EAAe;AAAA,MAAXK,MAAW;;AACzC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,iBAAL;AACI,gCAAWN,KAAX,UAAkBK,MAAM,CAACQ,WAAzB;;AACJ,SAAK,0BAAL;AACI;AACA,aAAOR,MAAM,CAACO,YAAd;;AACJ;AACI,aAAOZ,KAAP;AAPR;AASH,CAVD;;AAYA,IAAMc,KAAK,GAAG,SAARA,KAAQ,GAAwB;AAAA,MAAvBd,KAAuB,uEAAf,EAAe;AAAA,MAAXK,MAAW;;AAClC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,UAAL;AACI,gCAAWN,KAAX,UAAkBK,MAAM,CAACU,IAAzB;;AACJ,SAAK,mBAAL;AACI,aAAOV,MAAM,CAACS,KAAd;;AACJ;AACI,aAAOd,KAAP;AANR;AAQH,CATD;;AAWA,IAAMgB,UAAU,GAAG,SAAbA,UAAa,GAAwB;AAAA,MAAvBhB,KAAuB,uEAAf,EAAe;AAAA,MAAXK,MAAW;;AACvC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,eAAL;AACI,aAAOD,MAAM,CAACW,UAAd;;AACJ;AACI,aAAOhB,KAAP;AAJR;AAMH,CAPD;;AASA,IAAMiB,eAAe,GAAG,SAAlBA,eAAkB,GAAsB;AAAA,MAArBjB,KAAqB,uEAAb,EAAa;AAAA,MAATK,MAAS;AAC1C,SAAM;AACFR,IAAAA,MAAM,EAAEW,UAAU,CAACR,KAAD,EAAQK,MAAR,CADhB;AAEFP,IAAAA,MAAM,EAAEC,UAAU,CAACC,KAAD,EAAQK,MAAR,CAFhB;AAGFK,IAAAA,SAAS,EAAEA,SAAS,CAACV,KAAD,EAAQK,MAAR;AAHlB,GAAN;AAKH,CAND;AAOI;;;;AAIJ","sourcesContent":["import { combineReducers } from \"redux\";\nimport events from \"./EventsReducer\";\nimport filter from \"./FilterReducer\";\n\nexport default combineReducers({\n  events,\n  filter\n});\n\n\nconst old_filter = (state = {belonging:\"All\", date:\"from today\", search_name:'', location:\"All\"}, action) => {\n    switch(action.type){\n        case 'CHANGE_FILTER':\n            return action.newFilter;\n        default:\n            return state;\n    }\n}\n\nconst old_events = (state = [], action) => {\n    switch(action.type){\n        case 'ADD_EVENT':\n            return [...state, action.newEvent];\n        default:\n            return state;\n    }\n}\n\n\nconst locations = (state = [], action) => {\n    switch(action.type){\n        case 'ADD_LOCATION':\n            return [...state, action.newLocation]\n        default:\n            return state;\n    }\n}\n\n\nconst transactions = (state = [], action) => {\n    switch(action.type){\n        case 'ADD_TRANSACTION':\n            return [...state, action.transaction]\n        case 'GET_TRANSACTIONS_SUCCESS':\n            //console.log(\"Action GET_TRANSACTION_SUCCESS : \", action.transactions);\n            return action.transactions;\n        default:\n            return state;\n    }\n}\n\nconst users = (state = [], action) => {\n    switch(action.type){\n        case 'ADD_USER':\n            return [...state, action.user]\n        case 'GET_USERS_SUCCESS':\n            return action.users;\n        default:\n            return state;\n    }\n}\n\nconst selectUser = (state = [], action) => {\n    switch(action.type){\n        case 'CHANGE_FILTER':\n            return action.selectUser\n        default:\n            return state;\n    }\n}\n\nconst OLD_rootReducer = (state = [], action)=>{\n    return{\n        events: old_events(state, action),\n        filter: old_filter(state, action),\n        locations: locations(state, action)       \n    }\n}\n    /*combineReducers({\n        events = event(state, action);\n        //session: sessionReducer\n    })*/\n//export default rootReducer//connect({}, mapDispatchToProps)(rootReducer)"]},"metadata":{},"sourceType":"module"}