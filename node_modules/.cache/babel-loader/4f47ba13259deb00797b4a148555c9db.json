{"ast":null,"code":"var content = '/locations/';\n\nfunction getLocations() {\n  console.log(\"let's fetch Locations\"); //return fetch(url+\"/Locations/\", {method: 'text/plain', mode: 'cors'})\n\n  return fetch('/api/locations/').then(handleErrors).then(function (res) {\n    return res.json();\n  });\n}\n\nexport function fetchLocations() {\n  return function (dispatch) {\n    dispatch(fetchLocationsBegin());\n    return getLocations().then(function (json) {\n      console.log(\"success!\", json);\n      dispatch(fetchLocationsSuccess(json));\n      return json;\n    }).catch(function (error) {\n      return dispatch(fetchLocationsFailure(error));\n    });\n  };\n} // Handle HTTP errors since fetch won't.\n\nfunction handleErrors(response) {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n\n  return response;\n}\n\nexport var FETCH_LOCATIONS_BEGIN = \"FETCH_LOCATIONS_BEGIN\";\nexport var FETCH_LOCATIONS_SUCCESS = \"FETCH_LOCATIONS_SUCCESS\";\nexport var FETCH_LOCATIONS_FAILURE = \"FETCH_LOCATIONS_FAILURE\";\nexport var fetchLocationsBegin = function fetchLocationsBegin() {\n  return {\n    type: FETCH_LOCATIONS_BEGIN\n  };\n};\nexport var fetchLocationsSuccess = function fetchLocationsSuccess(locations) {\n  return {\n    type: FETCH_LOCATIONS_SUCCESS,\n    payload: {\n      locations: locations\n    }\n  };\n};\nexport var fetchLocationsFailure = function fetchLocationsFailure(error) {\n  return {\n    type: FETCH_LOCATIONS_FAILURE,\n    payload: {\n      error: error\n    }\n  };\n};","map":{"version":3,"sources":["/home/dagaubs/Cours/TPs/GLITAA/GLITAA_front/src/actions/LocationActions.js"],"names":["content","getLocations","console","log","fetch","then","handleErrors","res","json","fetchLocations","dispatch","fetchLocationsBegin","fetchLocationsSuccess","catch","error","fetchLocationsFailure","response","ok","Error","statusText","FETCH_LOCATIONS_BEGIN","FETCH_LOCATIONS_SUCCESS","FETCH_LOCATIONS_FAILURE","type","locations","payload"],"mappings":"AAAA,IAAIA,OAAO,GAAG,aAAd;;AACA,SAASC,YAAT,GAAwB;AACpBC,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EADoB,CAEpB;;AACA,SAAOC,KAAK,CAAC,iBAAD,CAAL,CACJC,IADI,CACCC,YADD,EAEJD,IAFI,CAEC,UAAAE,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,GAFJ,CAAP;AAGD;;AAGH,OAAO,SAASC,cAAT,GAA0B;AAC7B,SAAO,UAAAC,QAAQ,EAAI;AACjBA,IAAAA,QAAQ,CAACC,mBAAmB,EAApB,CAAR;AACA,WAAOV,YAAY,GAChBI,IADI,CACC,UAAAG,IAAI,EAAI;AACZN,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBK,IAAvB;AACAE,MAAAA,QAAQ,CAACE,qBAAqB,CAACJ,IAAD,CAAtB,CAAR;AACA,aAAOA,IAAP;AACD,KALI,EAMJK,KANI,CAME,UAAAC,KAAK;AAAA,aACVJ,QAAQ,CAACK,qBAAqB,CAACD,KAAD,CAAtB,CADE;AAAA,KANP,CAAP;AASD,GAXD;AAYD,C,CAED;;AACA,SAASR,YAAT,CAAsBU,QAAtB,EAAgC;AAC9B,MAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChB,UAAMC,KAAK,CAACF,QAAQ,CAACG,UAAV,CAAX;AACD;;AACD,SAAOH,QAAP;AACD;;AAED,OAAO,IAAMI,qBAAqB,GAAG,uBAA9B;AACP,OAAO,IAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,IAAMC,uBAAuB,GAAG,yBAAhC;AAEP,OAAO,IAAMX,mBAAmB,GAAG,SAAtBA,mBAAsB;AAAA,SAAO;AACxCY,IAAAA,IAAI,EAAEH;AADkC,GAAP;AAAA,CAA5B;AAIP,OAAO,IAAMR,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAAY,SAAS;AAAA,SAAK;AACjDD,IAAAA,IAAI,EAAEF,uBAD2C;AAEjDI,IAAAA,OAAO,EAAE;AAAED,MAAAA,SAAS,EAATA;AAAF;AAFwC,GAAL;AAAA,CAAvC;AAKP,OAAO,IAAMT,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAAD,KAAK;AAAA,SAAK;AAC7CS,IAAAA,IAAI,EAAED,uBADuC;AAE7CG,IAAAA,OAAO,EAAE;AAAEX,MAAAA,KAAK,EAALA;AAAF;AAFoC,GAAL;AAAA,CAAnC","sourcesContent":["var content = '/locations/'\nfunction getLocations() {\n    console.log(\"let's fetch Locations\");\n    //return fetch(url+\"/Locations/\", {method: 'text/plain', mode: 'cors'})\n    return fetch('/api/locations/')\n      .then(handleErrors)\n      .then(res => res.json());\n  }\n  \n\nexport function fetchLocations() {\n    return dispatch => {\n      dispatch(fetchLocationsBegin());\n      return getLocations()\n        .then(json => {\n          console.log(\"success!\",json);\n          dispatch(fetchLocationsSuccess(json));\n          return json;\n        })\n        .catch(error =>\n          dispatch(fetchLocationsFailure(error))\n        );\n    };\n  }\n  \n  // Handle HTTP errors since fetch won't.\n  function handleErrors(response) {\n    if (!response.ok) {\n      throw Error(response.statusText);\n    }\n    return response;\n  }\n  \n  export const FETCH_LOCATIONS_BEGIN = \"FETCH_LOCATIONS_BEGIN\";\n  export const FETCH_LOCATIONS_SUCCESS = \"FETCH_LOCATIONS_SUCCESS\";\n  export const FETCH_LOCATIONS_FAILURE = \"FETCH_LOCATIONS_FAILURE\";\n  \n  export const fetchLocationsBegin = () => ({\n    type: FETCH_LOCATIONS_BEGIN\n  });\n  \n  export const fetchLocationsSuccess = locations => ({\n    type: FETCH_LOCATIONS_SUCCESS,\n    payload: { locations }\n  });\n  \n  export const fetchLocationsFailure = error => ({\n    type: FETCH_LOCATIONS_FAILURE,\n    payload: { error }\n  });"]},"metadata":{},"sourceType":"module"}