{"ast":null,"code":"var content = '/locations/';\n\nfunction getLocations() {\n  console.log(\"let's fetch Locations\"); //return fetch(url+\"/Locations/\", {method: 'text/plain', mode: 'cors'})\n\n  return fetch('/api/locations/').then(handleErrors).then(function (res) {\n    return res.json();\n  });\n}\n\nfunction fetchAddLocation(location) {\n  return fetch('/api/locations/' + location.dtype + '/create', {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: location\n  }).then(handleErrors).then(function (res) {\n    return res.json();\n  });\n}\n\nexport function addLocation(location) {\n  return function (dispatch) {\n    dispatch(addLocationBegin());\n    return fetchAddLocation(location).then(function (json) {\n      console.log(\"success!\", json);\n      dispatch(addLocationSuccess(json));\n      return json;\n    }).catch(function (error) {\n      return dispatch(addLocationFailure(error));\n    });\n  };\n}\nexport function fetchLocations() {\n  return function (dispatch) {\n    dispatch(fetchLocationsBegin());\n    return getLocations().then(function (json) {\n      console.log(\"success!\", json);\n      dispatch(fetchLocationsSuccess(json));\n      return json;\n    }).catch(function (error) {\n      return dispatch(fetchLocationsFailure(error));\n    });\n  };\n} // Handle HTTP errors since fetch won't.\n\nfunction handleErrors(response) {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n\n  return response;\n}\n\nexport var FETCH_LOCATIONS_BEGIN = \"FETCH_LOCATIONS_BEGIN\";\nexport var FETCH_LOCATIONS_SUCCESS = \"FETCH_LOCATIONS_SUCCESS\";\nexport var FETCH_LOCATIONS_FAILURE = \"FETCH_LOCATIONS_FAILURE\";\nexport var ADD_LOCATION_BEGIN = \"ADD_LOCATION_BEGIN\";\nexport var ADD_LOCATION_SUCCESS = \"ADD_LOCATION_SUCCESS\";\nexport var ADD_LOCATION_FAILURE = \"ADD_LOCATION_FAILURE\";\nexport var fetchLocationsBegin = function fetchLocationsBegin() {\n  return {\n    type: FETCH_LOCATIONS_BEGIN\n  };\n};\nexport var fetchLocationsSuccess = function fetchLocationsSuccess(locations) {\n  return {\n    type: FETCH_LOCATIONS_SUCCESS,\n    payload: {\n      locations: locations\n    }\n  };\n};\nexport var fetchLocationsFailure = function fetchLocationsFailure(error) {\n  return {\n    type: FETCH_LOCATIONS_FAILURE,\n    payload: {\n      error: error\n    }\n  };\n};\nexport var addLocationBegin = function addLocationBegin() {\n  return {\n    type: ADD_LOCATION_BEGIN\n  };\n};\nexport var addLocationSuccess = function addLocationSuccess(location) {\n  return {\n    type: ADD_LOCATION_SUCCESS,\n    payload: {\n      location: location\n    }\n  };\n};\nexport var addLocationFailure = function addLocationFailure(error) {\n  return {\n    type: ADD_LOCATION_FAILURE,\n    payload: {\n      error: error\n    }\n  };\n};","map":{"version":3,"sources":["/home/dagaubs/Cours/TPs/GLITAA/GLITAA_front/src/actions/LocationActions.js"],"names":["content","getLocations","console","log","fetch","then","handleErrors","res","json","fetchAddLocation","location","dtype","method","headers","body","addLocation","dispatch","addLocationBegin","addLocationSuccess","catch","error","addLocationFailure","fetchLocations","fetchLocationsBegin","fetchLocationsSuccess","fetchLocationsFailure","response","ok","Error","statusText","FETCH_LOCATIONS_BEGIN","FETCH_LOCATIONS_SUCCESS","FETCH_LOCATIONS_FAILURE","ADD_LOCATION_BEGIN","ADD_LOCATION_SUCCESS","ADD_LOCATION_FAILURE","type","locations","payload"],"mappings":"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","sourcesContent":["var content = '/locations/'\nfunction getLocations() {\n    console.log(\"let's fetch Locations\");\n    //return fetch(url+\"/Locations/\", {method: 'text/plain', mode: 'cors'})\n    return fetch('/api/locations/')\n      .then(handleErrors)\n      .then(res => res.json());\n  }\n\nfunction fetchAddLocation(location) {\n    return fetch('/api/locations/'+location.dtype+'/create',{\n      method: 'POST',\n      headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: location\n    })\n        .then(handleErrors)\n        .then(res => res.json());\n  }\n\nexport function addLocation(location) {\n  return dispatch => {\n    dispatch(addLocationBegin());\n    return fetchAddLocation(location)\n      .then(json =>{\n          console.log(\"success!\",json);\n          dispatch(addLocationSuccess(json));\n          return json;\n      })\n      .catch(error =>\n        dispatch(addLocationFailure(error))\n      );\n  };\n}\n\nexport function fetchLocations() {\n    return dispatch => {\n      dispatch(fetchLocationsBegin());\n      return getLocations()\n        .then(json => {\n          console.log(\"success!\",json);\n          dispatch(fetchLocationsSuccess(json));\n          return json;\n        })\n        .catch(error =>\n          dispatch(fetchLocationsFailure(error))\n        );\n    };\n  }\n  \n  // Handle HTTP errors since fetch won't.\n  function handleErrors(response) {\n    if (!response.ok) {\n      throw Error(response.statusText);\n    }\n    return response;\n  }\n  \n  export const FETCH_LOCATIONS_BEGIN = \"FETCH_LOCATIONS_BEGIN\";\n  export const FETCH_LOCATIONS_SUCCESS = \"FETCH_LOCATIONS_SUCCESS\";\n  export const FETCH_LOCATIONS_FAILURE = \"FETCH_LOCATIONS_FAILURE\";\n  export const ADD_LOCATION_BEGIN = \"ADD_LOCATION_BEGIN\";\n  export const ADD_LOCATION_SUCCESS = \"ADD_LOCATION_SUCCESS\";\n  export const ADD_LOCATION_FAILURE = \"ADD_LOCATION_FAILURE\";\n\n  export const fetchLocationsBegin = () => ({\n    type: FETCH_LOCATIONS_BEGIN\n  });\n  \n  export const fetchLocationsSuccess = locations => ({\n    type: FETCH_LOCATIONS_SUCCESS,\n    payload: { locations }\n  });\n  \n  export const fetchLocationsFailure = error => ({\n    type: FETCH_LOCATIONS_FAILURE,\n    payload: { error }\n  });\n\n  export const addLocationBegin = () => ({\n    type: ADD_LOCATION_BEGIN\n  });\n  \n  export const addLocationSuccess = location => ({\n    type: ADD_LOCATION_SUCCESS,\n    payload: { location }\n  });\n  \n  export const addLocationFailure = error => ({\n    type: ADD_LOCATION_FAILURE,\n    payload: { error }\n  });"]},"metadata":{},"sourceType":"module"}