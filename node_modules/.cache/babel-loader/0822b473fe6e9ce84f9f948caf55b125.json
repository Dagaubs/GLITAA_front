{"ast":null,"code":"var content = '/events/';\n\nfunction getEvents() {\n  return fetch('/api/events/').then(handleErrors).then(function (res) {\n    return res.json();\n  });\n}\n\nexport function fetchEvents() {\n  return function (dispatch) {\n    dispatch(fetchEventsBegin());\n    return getEvents().then(function (json) {\n      console.log(\"success!\", json);\n      dispatch(fetchEventsSuccess(json));\n      return json;\n    }).catch(function (error) {\n      return dispatch(fetchEventsFailure(error));\n    });\n  };\n} // Handle HTTP errors since fetch won't.\n\nfunction handleErrors(response) {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n\n  return response;\n}\n\nexport var FETCH_EVENTS_BEGIN = \"FETCH_EVENTS_BEGIN\";\nexport var FETCH_EVENTS_SUCCESS = \"FETCH_EVENTS_SUCCESS\";\nexport var FETCH_EVENTS_FAILURE = \"FETCH_EVENTS_FAILURE\";\nexport var fetchEventsBegin = function fetchEventsBegin() {\n  return {\n    type: FETCH_EVENTS_BEGIN\n  };\n};\nexport var fetchEventsSuccess = function fetchEventsSuccess(events) {\n  return {\n    type: FETCH_EVENTS_SUCCESS,\n    payload: {\n      events: events\n    }\n  };\n};\nexport var fetchEventsFailure = function fetchEventsFailure(error) {\n  return {\n    type: FETCH_EVENTS_FAILURE,\n    payload: {\n      error: error\n    }\n  };\n};","map":{"version":3,"sources":["/home/dagaubs/Cours/TPs/GLITAA/GLITAA_front/src/actions/EventActions.js"],"names":["content","getEvents","fetch","then","handleErrors","res","json","fetchEvents","dispatch","fetchEventsBegin","console","log","fetchEventsSuccess","catch","error","fetchEventsFailure","response","ok","Error","statusText","FETCH_EVENTS_BEGIN","FETCH_EVENTS_SUCCESS","FETCH_EVENTS_FAILURE","type","events","payload"],"mappings":"AAAA,IAAIA,OAAO,GAAG,UAAd;;AACA,SAASC,SAAT,GAAqB;AACjB,SAAOC,KAAK,CAAC,cAAD,CAAL,CACJC,IADI,CACCC,YADD,EAEJD,IAFI,CAEC,UAAAE,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,GAFJ,CAAP;AAGD;;AAGH,OAAO,SAASC,WAAT,GAAuB;AAC1B,SAAO,UAAAC,QAAQ,EAAI;AACjBA,IAAAA,QAAQ,CAACC,gBAAgB,EAAjB,CAAR;AACA,WAAOR,SAAS,GACbE,IADI,CACC,UAAAG,IAAI,EAAI;AACZI,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBL,IAAvB;AACAE,MAAAA,QAAQ,CAACI,kBAAkB,CAACN,IAAD,CAAnB,CAAR;AACA,aAAOA,IAAP;AACD,KALI,EAMJO,KANI,CAME,UAAAC,KAAK;AAAA,aACVN,QAAQ,CAACO,kBAAkB,CAACD,KAAD,CAAnB,CADE;AAAA,KANP,CAAP;AASD,GAXD;AAYD,C,CAED;;AACA,SAASV,YAAT,CAAsBY,QAAtB,EAAgC;AAC9B,MAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChB,UAAMC,KAAK,CAACF,QAAQ,CAACG,UAAV,CAAX;AACD;;AACD,SAAOH,QAAP;AACD;;AAED,OAAO,IAAMI,kBAAkB,GAAG,oBAA3B;AACP,OAAO,IAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,IAAMC,oBAAoB,GAAG,sBAA7B;AAEP,OAAO,IAAMb,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,SAAO;AACrCc,IAAAA,IAAI,EAAEH;AAD+B,GAAP;AAAA,CAAzB;AAIP,OAAO,IAAMR,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAY,MAAM;AAAA,SAAK;AAC3CD,IAAAA,IAAI,EAAEF,oBADqC;AAE3CI,IAAAA,OAAO,EAAE;AAAED,MAAAA,MAAM,EAANA;AAAF;AAFkC,GAAL;AAAA,CAAjC;AAKP,OAAO,IAAMT,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAD,KAAK;AAAA,SAAK;AAC1CS,IAAAA,IAAI,EAAED,oBADoC;AAE1CG,IAAAA,OAAO,EAAE;AAAEX,MAAAA,KAAK,EAALA;AAAF;AAFiC,GAAL;AAAA,CAAhC","sourcesContent":["var content = '/events/'\nfunction getEvents() {\n    return fetch('/api/events/')\n      .then(handleErrors)\n      .then(res => res.json());\n  }\n  \n\nexport function fetchEvents() {\n    return dispatch => {\n      dispatch(fetchEventsBegin());\n      return getEvents()\n        .then(json => {\n          console.log(\"success!\",json);\n          dispatch(fetchEventsSuccess(json));\n          return json;\n        })\n        .catch(error =>\n          dispatch(fetchEventsFailure(error))\n        );\n    };\n  }\n  \n  // Handle HTTP errors since fetch won't.\n  function handleErrors(response) {\n    if (!response.ok) {\n      throw Error(response.statusText);\n    }\n    return response;\n  }\n  \n  export const FETCH_EVENTS_BEGIN = \"FETCH_EVENTS_BEGIN\";\n  export const FETCH_EVENTS_SUCCESS = \"FETCH_EVENTS_SUCCESS\";\n  export const FETCH_EVENTS_FAILURE = \"FETCH_EVENTS_FAILURE\";\n  \n  export const fetchEventsBegin = () => ({\n    type: FETCH_EVENTS_BEGIN\n  });\n  \n  export const fetchEventsSuccess = events => ({\n    type: FETCH_EVENTS_SUCCESS,\n    payload: { events }\n  });\n  \n  export const fetchEventsFailure = error => ({\n    type: FETCH_EVENTS_FAILURE,\n    payload: { error }\n  });"]},"metadata":{},"sourceType":"module"}