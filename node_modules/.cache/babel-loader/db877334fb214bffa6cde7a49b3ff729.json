{"ast":null,"code":"import _classCallCheck from \"/home/dagaubs/Cours/TPs/GLITAA/GLITAA_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dagaubs/Cours/TPs/GLITAA/GLITAA_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dagaubs/Cours/TPs/GLITAA/GLITAA_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dagaubs/Cours/TPs/GLITAA/GLITAA_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dagaubs/Cours/TPs/GLITAA/GLITAA_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/dagaubs/Cours/TPs/GLITAA/GLITAA_front/src/Components/Login.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { login as _login } from '../actions/LoginActions';\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    login: function login(username, password) {\n      dispatch(_login(username, password));\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    success: state.login.items,\n    authenticated: state.login.authenticated,\n    loading: state.login.loading,\n    error: state.login.error\n  };\n};\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n    _this.state = {\n      usernameInput: '',\n      passwordInput: ''\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          error = _this$props.error,\n          loading = _this$props.loading;\n      var errorMessage = '';\n\n      if (error) {\n        errorMessage;\n      }\n\n      return React.createElement(\"div\", {\n        className: \"Login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.usernameInput,\n        placeholder: \"Username\",\n        onChange: function onChange(evt) {\n          return _this2.updateUsernameInput(evt);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"password\",\n        value: this.state.passwordInput,\n        placeholder: \"password\",\n        onChange: function onChange(evt) {\n          return _this2.updatePasswordInput(evt);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"login_button\",\n        onClick: this.loginButtonOnClick(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Login\"));\n    }\n  }, {\n    key: \"loginButtonOnClick\",\n    value: function loginButtonOnClick() {\n      this.props.login(this.state.usernameInput, this.state.passwordInput);\n    }\n  }, {\n    key: \"updateUsernameInput\",\n    value: function updateUsernameInput(evt) {\n      this.setState({\n        usernameInput: evt.target.value\n      });\n    }\n  }, {\n    key: \"updatePasswordInput\",\n    value: function updatePasswordInput(evt) {\n      this.setState({\n        passwordInput: evt.target.value\n      });\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/dagaubs/Cours/TPs/GLITAA/GLITAA_front/src/Components/Login.js"],"names":["React","Component","connect","login","mapDispatchToProps","dispatch","username","password","mapStateToProps","state","success","items","authenticated","loading","error","Login","props","usernameInput","passwordInput","errorMessage","evt","updateUsernameInput","updatePasswordInput","loginButtonOnClick","setState","target","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAK,IAALA,MAAT,QAAsB,yBAAtB;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACnC,SAAM;AACFF,IAAAA,KAAK,EAAE,eAACG,QAAD,EAAWC,QAAX,EAAsB;AACzBF,MAAAA,QAAQ,CAACF,MAAK,CAACG,QAAD,EAAWC,QAAX,CAAN,CAAR;AACH;AAHC,GAAN;AAKH,CAND;;AAQA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9BC,IAAAA,OAAO,EAAED,KAAK,CAACN,KAAN,CAAYQ,KADS;AAE9BC,IAAAA,aAAa,EAAEH,KAAK,CAACN,KAAN,CAAYS,aAFG;AAG9BC,IAAAA,OAAO,EAAEJ,KAAK,CAACN,KAAN,CAAYU,OAHS;AAI9BC,IAAAA,KAAK,EAAEL,KAAK,CAACN,KAAN,CAAYW;AAJW,GAAL;AAAA,CAA7B;;IAOMC,K;;;;;AACF,iBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,+EAAMA,KAAN;AAEA,UAAKP,KAAL,GAAa;AACTQ,MAAAA,aAAa,EAAE,EADN;AAETC,MAAAA,aAAa,EAAE;AAFN,KAAb;AAHc;AAOjB;;;;6BAEO;AAAA;;AAAA,wBACuB,KAAKF,KAD5B;AAAA,UACIF,KADJ,eACIA,KADJ;AAAA,UACWD,OADX,eACWA,OADX;AAEJ,UAAIM,YAAY,GAAG,EAAnB;;AACA,UAAGL,KAAH,EACA;AACIK,QAAAA,YAAY;AACf;;AACD,aACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAE,KAAKV,KAAL,CAAWQ,aAArC;AAAoD,QAAA,WAAW,EAAC,UAAhE;AAA2E,QAAA,QAAQ,EAAE,kBAAAG,GAAG;AAAA,iBAAI,MAAI,CAACC,mBAAL,CAAyBD,GAAzB,CAAJ;AAAA,SAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,KAAK,EAAE,KAAKX,KAAL,CAAWS,aAAzC;AAAwD,QAAA,WAAW,EAAC,UAApE;AAA+E,QAAA,QAAQ,EAAE,kBAAAE,GAAG;AAAA,iBAAI,MAAI,CAACE,mBAAL,CAAyBF,GAAzB,CAAJ;AAAA,SAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAII;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAiC,QAAA,OAAO,EAAE,KAAKG,kBAAL,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJJ,CADJ;AAUH;;;yCAEmB;AAChB,WAAKP,KAAL,CAAWb,KAAX,CAAiB,KAAKM,KAAL,CAAWQ,aAA5B,EAA2C,KAAKR,KAAL,CAAWS,aAAtD;AACH;;;wCAEmBE,G,EAAI;AACpB,WAAKI,QAAL,CAAc;AACVP,QAAAA,aAAa,EAAEG,GAAG,CAACK,MAAJ,CAAWC;AADhB,OAAd;AAGH;;;wCAEmBN,G,EAAI;AACpB,WAAKI,QAAL,CAAc;AACVN,QAAAA,aAAa,EAAEE,GAAG,CAACK,MAAJ,CAAWC;AADhB,OAAd;AAGH;;;;EA3CezB,S;;AA6CpB,eAAeC,OAAO,CAACM,eAAD,EAAkBJ,kBAAlB,CAAP,CAA6CW,KAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { login } from '../actions/LoginActions';\n\nconst mapDispatchToProps = dispatch => {\n    return{\n        login: (username, password)=>{\n            dispatch(login(username, password));\n        }\n    }\n}\n\nconst mapStateToProps = state => ({\n    success: state.login.items,\n    authenticated: state.login.authenticated,\n    loading: state.login.loading,\n    error: state.login.error\n  });\n\nclass Login extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            usernameInput: '',\n            passwordInput: ''\n        }\n    }\n\n    render(){\n        const { error, loading } = this.props;\n        var errorMessage = '';\n        if(error)\n        {\n            errorMessage\n        }\n        return (\n            <div className=\"Login\">\n                \n                <input type='text' value={this.state.usernameInput} placeholder=\"Username\" onChange={evt => this.updateUsernameInput(evt)}/>\n                <input type='password' value={this.state.passwordInput} placeholder=\"password\" onChange={evt => this.updatePasswordInput(evt)}/>\n                <button className=\"login_button\" onClick={this.loginButtonOnClick()}>\n                    Login\n                </button>\n            </div>\n        )\n    }\n\n    loginButtonOnClick(){\n        this.props.login(this.state.usernameInput, this.state.passwordInput);\n    }\n\n    updateUsernameInput(evt){\n        this.setState({\n            usernameInput: evt.target.value\n        });\n    }\n\n    updatePasswordInput(evt){\n        this.setState({\n            passwordInput: evt.target.value\n        });\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)"]},"metadata":{},"sourceType":"module"}