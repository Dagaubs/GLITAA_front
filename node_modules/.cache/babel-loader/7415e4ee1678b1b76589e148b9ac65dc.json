{"ast":null,"code":"import _classCallCheck from \"/home/dagaubs/Cours/TPs/GLITAA/GLITAA_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dagaubs/Cours/TPs/GLITAA/GLITAA_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dagaubs/Cours/TPs/GLITAA/GLITAA_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dagaubs/Cours/TPs/GLITAA/GLITAA_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dagaubs/Cours/TPs/GLITAA/GLITAA_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/dagaubs/Cours/TPs/GLITAA/GLITAA_front/src/Components/AddEvent.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Header from './Header';\nimport DatePicker from 'react-date-picker';\nimport { fetchLocations as _fetchLocations } from \"../actions/LocationActions\";\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchLocations: function fetchLocations() {\n      dispatch(_fetchLocations());\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    locations: state.locations.items,\n    loading: state.locations.loading,\n    error: state.locations.error\n  };\n};\n\nvar AddEvent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddEvent, _Component);\n\n  function AddEvent(props) {\n    var _this;\n\n    _classCallCheck(this, AddEvent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddEvent).call(this, props));\n    _this.state = {\n      title: '',\n      dateBegin: '',\n      dateEnd: ''\n    };\n    return _this;\n  }\n\n  _createClass(AddEvent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.state.locations != []) {\n        this.props.fetchLocations();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          error = _this$props.error,\n          loading = _this$props.loading;\n\n      if (error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, \"Error! \", error.message);\n      }\n\n      if (loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, \"Loading...\");\n      }\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"newEvent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.value,\n        placeholder: \"Event title\",\n        onChange: function onChange(evt) {\n          return _this2.updateInputValue(evt);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Starts : \"), React.createElement(DatePicker, {\n        OnChange: this.updateDateBegin,\n        value: this.state.dateBegin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Ends : \"), React.createElement(DatePicker, {\n        OnChange: this.updateDateEnd,\n        value: this.state.dateEnd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        multiple: true,\n        placeholder: \"locations\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, this.props.locations.map(function (location) {\n        return React.createElement(\"option\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"checkbox\",\n          value: _this2.location.name,\n          input: function input(evt) {\n            return _this2.updateLocationsInput(evt);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }));\n      }))));\n    }\n  }, {\n    key: \"updateLocationsInput\",\n    value: function updateLocationsInput(evt) {\n      console.log(\"input : \", evt);\n    }\n  }, {\n    key: \"updateTitleInput\",\n    value: function updateTitleInput(evt) {\n      this.setState({\n        title: evt.target.value\n      });\n    }\n  }, {\n    key: \"updateDateBegin\",\n    value: function updateDateBegin(evt) {\n      console.log(\"dateBegin update : \", evt);\n      this.setState({\n        dateBegin: evt.target.value\n      });\n    }\n  }, {\n    key: \"updateDateEnd\",\n    value: function updateDateEnd(evt) {\n      this.setState({\n        dateEnd: evt.target.value\n      });\n    }\n  }]);\n\n  return AddEvent;\n}(Component);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddEvent);","map":{"version":3,"sources":["/home/dagaubs/Cours/TPs/GLITAA/GLITAA_front/src/Components/AddEvent.js"],"names":["React","Component","connect","Header","DatePicker","fetchLocations","mapDispatchToProps","dispatch","mapStateToProps","state","locations","items","loading","error","AddEvent","props","title","dateBegin","dateEnd","message","value","evt","updateInputValue","updateDateBegin","updateDateEnd","map","location","name","updateLocationsInput","console","log","setState","target"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Header from './Header';\nimport DatePicker from 'react-date-picker';\nimport { fetchLocations } from \"../actions/LocationActions\";\n\nconst mapDispatchToProps = dispatch => {\n    return{\n        fetchLocations: ()=>{\n            dispatch(fetchLocations());\n        }\n    }\n}\n\nconst mapStateToProps = state => ({\n    locations: state.locations.items,\n    loading: state.locations.loading,\n    error: state.locations.error\n  });\n\nclass AddEvent extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            title: '',\n            dateBegin: '',\n            dateEnd: '',\n        }\n    }\n\n    componentDidMount(){\n        if(this.state.locations != []){\n            this.props.fetchLocations();\n        }\n    }\n\n    render(){\n        const { error, loading } = this.props;\n    \n        if (error) {\n            return <div>Error! {error.message}</div>;\n        }\n        \n        if (loading) {\n            return <div>Loading...</div>;\n        }\n\n        return (\n            <div className=\"App\">\n                <Header />\n                <div className=\"newEvent\">\n                    <input type=\"text\" value={this.state.value} placeholder=\"Event title\" onChange={evt => this.updateInputValue(evt)}/>\n                    <p>Starts : </p>\n                    <DatePicker OnChange={this.updateDateBegin} value={this.state.dateBegin}/>\n                    <p>Ends : </p>\n                    <DatePicker OnChange={this.updateDateEnd} value={this.state.dateEnd}/>\n                    <select multiple placeholder=\"locations\">\n                        {this.props.locations.map(location => (\n                           <option><input type=\"checkbox\" value={this.location.name} input={evt => this.updateLocationsInput(evt)} /></option> \n                        ))}\n                    </select>\n                </div>\n            </div>\n            \n        )\n    }\n\n    updateLocationsInput(evt){\n        console.log(\"input : \", evt);\n    }\n\n    updateTitleInput(evt){\n        this.setState({\n            title: evt.target.value\n        });\n    }\n\n    updateDateBegin(evt){\n        console.log(\"dateBegin update : \", evt);\n        this.setState({\n            dateBegin: evt.target.value\n        });\n    }\n\n    updateDateEnd(evt){\n        this.setState({\n            dateEnd: evt.target.value\n        });\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(AddEvent)"]},"metadata":{},"sourceType":"module"}